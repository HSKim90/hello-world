운영체제 : HW 바로 위에 설치되어 사용자나 SW를 HW와 연결하는 SW 계층

좁은 의미의 OS : 커널. OS의 핵심적인 부분. 부팅 이후 항상 메모리에 상주
넓은 의미의 OS : 커널 + 시스템 유틸리티(파일 복사 SW 등). 메모리에 상주하지 않는 독립적인 SW

OS의 목적 : 1. HW의 효율적인 관리(자원 - cpu, 메모리, io장치, 프로세스, 파일, 메시지 의 효율적인 관리)
	    2. 사용자가 시스템을 편리하게 사용할 수 있는 환경 제공


시분할 OS : deadline 없이 output
실시간 OS : deadline 내에 output 보장

대부분의 os는 다중작업, 다중사용자, 시분할

멀티태스킹 : 다중작업의 일반적인 용어. 엄밀하게 말하면 CPU에서는 하나의 작업, 빠른 컨텍스트 스위칭
멀티프로그래밍 : 다중작업 중에서 메모리에 여러 프로그램이 올라가 있는 방식. 메모리의 측면 강조
타임 쉐어링 : 시분할 공유. CPU의 측면 강조
멀티 프로세스 : 프로세스 = 실행중인 프로그램. 실행 중인 프로그램이 여러개 = 다중작업

밀티 프로세서 : CPU가 여러개 -> 여러 프로그램이 여러 CPU에서 동작 가능

운영체제의 구조
CPU : 어떤 프로그램에게 CPU를 할당?(CPU 스케줄링)
메모리 : 한정된 메모리를 어떻게 쪼개서 사용?(메모리 관리)
디스크 : 파일을 보관(파일 관리) 
IO 장치 : 각기 다른 입출력장치와 컴퓨터 간에 정보를 주고받기(입출력 관리 - 인터럽트)
프로레스 관리 : 프로세스의 생성과 삭제, 자원 할당 및 반환, 프로세스 간 협력
그 외 : 보호 시스템, 네트워킹, 명령어 해석기